# Use an official PHP runtime as a base image
FROM php:8.2-fpm

# Install system dependencies and PHP extensions
# ... (other instructions)
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    zip \
    unzip \
    #mysql-client \  
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install gd pdo pdo_mysql
# Install Composer globally
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copy the application code into the container
COPY . .

# Install application dependencies using Composer
RUN composer install

# Expose port 9000 and start PHP-FPM server
EXPOSE 9000
CMD ["php-fpm"]


# file for postgres
# FROM php:8.2-fpm

# RUN docker-php-ext-install pdo pdo_mysql


# RUN apt-get update

# # Install useful tools
# RUN apt-get -y install apt-utils nano wget dialog vim

# # Install important libraries
# RUN echo "\e[1;33mInstall important libraries\e[0m"
# RUN apt-get -y install --fix-missing \
#     apt-utils \
#     build-essential \
#     git \
#     curl \
#     libcurl4 \
#     libcurl4-openssl-dev \
#     zlib1g-dev \
#     libzip-dev \
#     zip \
#     libbz2-dev \
#     locales \
#     libmcrypt-dev \
#     libicu-dev \
#     libonig-dev \
#     libxml2-dev
    
# # RUN echo "\e[1;33mInstall important docker dependencies\e[0m"
# # RUN docker-php-ext-install \
# #     exif \
# #     pcntl \
# #     bcmath \
# #     ctype \
# #     curl \
# #     iconv \
# #     xml \
# #     soap \
# #     pcntl \
# #     mbstring \
# #     tokenizer \
# #     bz2 \
# #     zip \
# #     intl

# # Install Postgre PDO
# RUN apt-get install -y libpq-dev \
#     && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \
#     && docker-php-ext-install pdo pdo_pgsql pgsql
